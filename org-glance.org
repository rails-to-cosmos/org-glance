* Terms

- headline -- org-element of type 'headline with ORG_GLANCE_ID property specified.
  Contains all nested elements.
- overview(HEADLINE) -- read-only representation of HEADLINE.
  org-element that contains all HEADLINE retrievable data used in
  org-agenda, org-glance transient filters and in any kind of views:
  1. Todo state.
  2. Active timestamps, SCHEDULED and DEADLINE properties.
  3. ORG_GLANCE_ID property.
  4. Default directory of headline, DIR.
  5. Relations: mentions, subtasks, etc
  6. Content-related features:
     1. Headline contains org-link?
     2. Content is encrypted?
     3. Headline contains key-value data that can be extracted?
- class(HEADLINE) -- symbol from org-tags of HEADLINE.
- overview(CLASS) -- set of OVERVIEW(HEADLINE of CLASS).

* Tasks
** STARTED [#A] Reanimate project: add tests, refactor and support
:LOGBOOK:
- State "STARTED"    from "TODO"       [2024-11-11 Mon 22:11]
:END:

- [-] Test main scenarios
  - [X] Proper sessions / tag namespaces for testing and distributed dbs
  - [ ] Headline data model
- [ ] Benchmarks
- [ ] Linters
- [ ] Look at ht / map for hash table manipulation
- [ ] [[https://elpa.gnu.org/packages/persist.html][Persist]] for caching
- [ ] [[https://github.com/doublep/extmap/blob/master/extmap.el][Extmap]]
** TODO Thunkify headline derivative properties if possible
** TODO ability to encrypt regions, not only headlines
** TODO Separate directory for "resources"
- For each tag create "resources" directory containing attachments
** TODO Use [[https://github.com/jorgenschaefer/emacs-buttercup][buttercup]] for tests
** gantt chart view
1. *STARTED* Project       █████████████████████████
      *DONE* Decomposition ▒▒▒▒▒▒▒
      *TODO* Do something         ▒▒▒▒▒▒▒▒▒▒▒▒▒
      *TODO* Publish report                    ▒▒▒▒▒
** TODO clone id should be unique (postfix)
** DONE bindat
CLOSED: [2022-02-15 Tue 23:03]
:LOGBOOK:
- State "DONE"       from              [2022-02-15 Tue 23:03]
:END:
#+begin_src emacs-lisp
(require 'bindat)

(setq data-spec
      '((type      u8)
        (id        strz 8)))

(setq data (bindat-pack
            data-spec
            `((type . 2)
              (id . "Test"))))

(bindat-unpack data-spec data)

(with-temp-file "/tmp/result.bin"
  (insert data))

(with-temp-buffer
  (mm-disable-multibyte)
  (insert-file-literally "/tmp/result.bin")
  (bindat-unpack data-spec (buffer-string)))
#+end_src
** TODO [#A] class settings
** TODO [#A] class sources
** TODO [#A] implement roles for relations
1. Next: _ (downstream)
2. Blocked by _ (upstream)
3. Cloned from _
4. Subtask: _

- =Article= [[org-glance-visit:Article-20210826-7dc7b39dcaf77d1f25d654967a3a1afd][Anchor Modeling: Peridata between Data and Metadata]]
- =Article= [[org-glance-visit:Article-20210826-9b1d041ca0c9581606151a2ae496115d][Modeling Conflicting, Unreliable, and Varying Information]]
- Implement anchormodeling logbook management (store appearance sets in logbook drawer).
- Reserve posit, ascertains, thing, and class.
- Implement transactions.
- Distinguish data, metadata and peridata (peripheral data, domain classifications).
- Think about how to implement metadata.
- [[https://github.com/Roenbaeck/bareclad][GitHub - Roenbaeck/bareclad: Based on transitional modeling, bareclad is a new type of database that provides features from relational, graph, columnar, and name-value pair databases.]]

Use posits in logbook drawer: [
  {(thing 1, role 1), ..., (thing n, role n)},
  appearing value,
  time of appearance
]

Cache roles: employee/employer, contact/task
** PENDING high-level agenda
:LOGBOOK:
- State "PENDING"    from "STARTED"    [2022-01-05 Wed 21:32]
CLOCK: [2022-01-05 Wed 18:40]--[2022-01-05 Wed 21:32] =>  2:52
- State "STARTED"    from "TODO"       [2022-01-05 Wed 18:40]
:END:
** TODO CLOSED entries partition by closed day
** TODO Cloned headlines should contain pointer on previous
** TODO memos (flashcard support)
** TODO kill buffer after material apply
** TODO optimize "register" methods
** TODO timedelta for downstream tasks
** TODO completing read instead of org-completing-read
** TODO domains. domain borders. cross-domain classes.
** PENDING [#A] capture through materialization
:LOGBOOK:
- State "PENDING"    from "STARTED"    [2021-12-26 Sun 13:30]
CLOCK: [2021-12-26 Sun 12:11]--[2021-12-26 Sun 13:30] =>  1:19
- State "STARTED"    from "TODO"       [2021-12-26 Sun 12:11]
:END:
make materialization a single thing that can modify headlines
** TODO multiple repeated tasks of one project
** TODO repeated tasks: clone subtasks
** TODO when do i need to create a new class?
- when you want to start answering specific requests:
** TODO quick-insert on material sync
assume overview is sorted
perform quick insert instead of tail insert
** TODO fix reverse relation
** TODO save checkboxes history when :RESET_CHECK_BOXES: t
** text props magic
https://ftp.gnu.org/old-gnu/Manuals/elisp-manual-21-2.8/html_node/elisp_530.html
** TODO proper table view
** TODO mentions in capture
** TODO material mode: proper tags removal (update local buffer variables)
** TODO class overview
** TODO clone + reschedule
** DONE bidirected relations
CLOSED: [2021-11-20 Sat 13:59]
:LOGBOOK:
- State "DONE"       from "STARTED"    [2021-11-20 Sat 13:59]
CLOCK: [2021-11-20 Sat 11:08]--[2021-11-20 Sat 12:45] =>  1:37
- Clocked out on [2021-11-20 Sat 12:45]
- State "STARTED"    from "TODO"       [2021-11-20 Sat 11:08]
:END:
** DONE delete class feature
CLOSED: [2021-11-20 Sat 16:36]
:LOGBOOK:
- State "DONE"       from "TODO"       [2021-11-20 Sat 16:36]
:END:
** TODO Implement day-grained CAPACITY
show it with schedule (as an overlay)
** TODO able to capture any text without headlines (default headline will be generated then)
** TODO Repeat and clone diary-cyclic monthly entries?
** DONE Save after clone
CLOSED: [2021-11-17 Wed 16:54]
:LOGBOOK:
- State "DONE"       from "TODO"       [2021-11-17 Wed 16:54]
:END:
** DONE Proper partition sort implementation
CLOSED: [2021-11-17 Wed 16:54]
:LOGBOOK:
- State "DONE"       from "TODO"       [2021-11-17 Wed 16:54]
:END:
** DONE Clone feature (clone on repeat, clone-archive+reschedule)
CLOSED: [2021-11-13 Sat 14:17]
:LOGBOOK:
- State "DONE"       from "TODO"       [2021-11-13 Sat 14:17]
:END:
** DONE Split capture and reschedule?
CLOSED: [2021-10-23 Sat 13:24]
:LOGBOOK:
- State "DONE"       from "TODO"       [2021-10-23 Sat 13:24]
:END:
** TODO Overview kill-headline should do materialization. Add tests
** DONE Fix headline-at-point behavior
CLOSED: [2021-10-13 Wed 14:28]
:LOGBOOK:
- State "DONE"       from "TODO"       [2021-10-13 Wed 14:28]
:END:
** TODO Gamification
- [[https://en.wikipedia.org/wiki/Colossal_Cave_Adventure][Colossal Cave Adventure - Wikipedia]]
** Visualization
*** http://bl.ocks.org/nbremer/94db779237655907b907
*** [[https://observablehq.com/@mbostock/tree-of-life][Tree of Life / Mike Bostock / Observable]]
*** [[https://observablehq.com/@d3/gallery][Gallery / D3 / Observable]]
- [[http://bl.ocks.org/NPashaP/96447623ef4d342ee09b][DashBoard - bl.ocks.org]]
- [[http://bl.ocks.org/joews/9697914][Animated d3 word cloud - bl.ocks.org]]
- [[http://bl.ocks.org/erkal/9746513][Random Graph Generator - bl.ocks.org]]
- [[http://bl.ocks.org/chaitanyagurrapu/6007521][A Google calendar like display for temporal data using D3.Js - bl.ocks.org]]
- [[http://bl.ocks.org/Jverma/887877fc5c2c2d99be10][Bar chart from external JSON file - bl.ocks.org]]
*** [[https://dc-js.github.io/dc.js/][dc.js - Dimensional Charting Javascript Library]]
*** [[https://www.data-to-viz.com/graph/edge_bundling.html][Hierarchical edge bundling – from Data to Viz]]
*** [[https://bl.ocks.org/vasturiano/ded69192b8269a78d2d97e24211e64e0][Timelines Chart - bl.ocks.org]]
*** https://lliquid.github.io/homepage/files/ts13_edgebundle.pdf
** TODO Overview Mode
*** TODO overview of all views registered with view-scoped actions
:LOGBOOK:
- State "STARTED"    from "TODO"       [2021-09-12 Sun 14:06]
CLOCK: [2021-09-12 Sun 14:06]--[2021-09-12 Sun 16:28] =>  2:22
- Clocked out on [2021-09-12 Sun 16:28]
:END:
*** TODO commented headlines restrictions
*** TODO org-overview-mode: modify-sync headline feature
*** DONE org-overview-mode: add headline feature
CLOSED: [2021-08-26 Thu 10:40]
:LOGBOOK:
- State "DONE"       from "TODO"       [2021-08-26 Thu 10:40]
:END:
*** TODO org-glance:format issue for strings containing % symbol
** TODO Headline API
*** TODO headline API: add unit tests
** TODO Agenda and Notifications
** Completing Read [0/1]
*** TODO build titles from all direct relations
** Unsorted [5/18]
*** TODO Resolve title collision by traversing dependencies
*** TODO Handle capture cancelling
*** TODO Clone repeated headlines
*** DONE [#A] make headline types implicit with headline grain
CLOSED: [2021-10-01 Fri 16:40]
:LOGBOOK:
- State "DONE"       from "TODO"       [2021-10-01 Fri 16:40]
:END:
*** DONE implement custom schedule (maybe for ledna)
CLOSED: [2021-10-01 Fri 16:40]
:LOGBOOK:
- State "DONE"       from "TODO"       [2021-10-01 Fri 16:40]
:END:
*** TODO high priority for current clocked-in dependencies in completing read
*** DONE remove headline feature
CLOSED: [2021-10-01 Fri 16:40]
:LOGBOOK:
- State "DONE"       from "TODO"       [2021-10-01 Fri 16:40]
:END:
*** TODO capture templates support
*** CANCELLED change metastore serialization format (elisp → json)
CLOSED: [2021-10-01 Fri 16:40]
:LOGBOOK:
- State "CANCELLED"  from "TODO"       [2021-10-01 Fri 16:40]
:END:
*** TODO mutable states → publish-subscribe model
- implement write ahead log
- store initial state and diffs, then apply compaction
- subscribe on changes
*** DONE register headlines in metastore & overview on materialized sync
CLOSED: [2021-09-12 Sun 13:45]
:LOGBOOK:
- State "DONE"       from "TODO"       [2021-09-12 Sun 13:45]
:END:
*** TODO refactor capture with org-refile
*** TODO [#C] If summary is unregistered, prompt to register it before any user action
*** TODO Read views from directory to minimize config
:LOGBOOK:
- State "STARTED"    from "TODO"       [2021-09-03 Fri 09:46]
CLOCK: [2021-09-03 Fri 09:46]--[2021-09-03 Fri 18:15] =>  8:29
- Clocked out on [2021-09-03 Fri 19:15]
:END:
*** TODO [#C] lexical binding breaks formatting
*** TODO view-based materialized view buffer names: *materialized-event*
*** TODO views github-like dashboards

| #   | Jul   | Aug | Sep | Oct | Nov | Dec |
|-----+-------+-----+-----+-----+-----+-----|
| Mon | ▬▬▬ | ### | ### | ### | ### | ### |
| Tue | ▬▬▬ | ### | ### | ### | ### | ### |
| Wed | ###   | ### | ### | ### | ### | ### |
| Thu | ###   | ### | ### | ### | ### | ### |
| Fri | ###   | ### | ### | ### | ### | ### |
| Sat | ###   | ### | ### | ### | ### | ### |
| Sun | ###   | ### | ### | ### | ### | ### |

*** TODO read-only flag for materialized views
*** TODO full-text search
*** TODO parse encrypted blocks in any point of subtree
*** TODO make ARCHIVED/Commented entries inactive (it is populated by EXPORT, but not visible in OPEN/VISIT/MATERIALIZE)
** TODO New Actions
*** TODO Execute Babel Blocks and Retrieve Results
* Thoughts

- [[https://github.com/narendraj9/emlib][emlib: a humble Machine Learning library]]
- https://grishaev.me/clj-zippers-1/
- https://github.com/bbatsov/emacs-lisp-style-guide
- https://ctan.org/pkg/pgfgantt
- https://i.imgur.com/rjmfauQ.png
- https://www.reddit.com/r/emacs/comments/5yhk1m/gantt_charts_for_orgmode/
- http://fastcompression.blogspot.com/p/lz4.html
- https://en.wikipedia.org/wiki/Conflict-free_replicated_data_type
- https://towardsdatascience.com/how-to-build-a-complex-reporting-dashboard-using-dash-and-plotl-4f4257c18a7f#a5c5
** reddit
>> isomer

I had a weird dream at some point of a personal mediawiki like software.

You could use it as a personal wiki, and put key/value tags on pages that could be used to search for things later. You could also ask it to suck in all your personal information (calendar, bank statements, etc) and had pre-built pages that gave you breakdowns of spending by category and so on, or a calendar of when you had various expenses. It would suck in your email and annotate expenses with the receipts from your inbox.

it had a bunch of input plugins that would scrape data from various places
the data was all piled into one big datastructure (something like a RDF triplestore?)
there were a bunch of templates that would take data out of the datastructure and render them. (perhaps based on schema.org schemas?)
for example, for data with dates, render it as a timeline, calendar, iCal etc.
For things with a location, render them on a map, etc.
people as vCard or a nice contacts page etc.
Being a wiki, linking is encouraged to go from one to another.
and a bunch of personal business information type things letting you graph or search things.
It was easy to create new personal wiki pages with whatever content you’d want, add some key/value tags to them, and have the information incorporated into the datastore. It was easy to go find some data source on the internet (csv, json-ld, graphql etc) and add it as a data source to regularly scrape. And it was easy to create new graphs of data, allowing you to find two data sources (eg covid rates by region, socioeconomic rates by region) and join them, and produce graphs based on that data by just adding some tags to a wiki page.

I know that this sorta exists in a bunch of RDF tools, but I imagined something that was a bit easier to interact with. I tried hacking something up based on this, but I’ve not managed to get it to feel “easy”, instead of having a bunch of obscure incantations to do things.
* dist-packages

- https://github.com/skeeto/emacsql
- https://magit.vc/manual/transient/
- https://altair-viz.github.io/getting_started/overview.html
