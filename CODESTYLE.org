1. All identifiers should be prefixed by the main namespace: =org-glance-=.
2. Predicates should end with =?= sign, i.e. org-glance-headline-v2?.
3. CL structures should be named after namespace, i.e. =org-glance-headline=.
   1. Constructor method should be equal to the struct name, so for =org-glance-headline= the constructor method is =org-glance-headline=.
   2. Type predicate should be named exactly as corresponding type name with =?= sign at the end: =org-glance-headline-v2?=.
   3. Struct fields and methods should follow naming convention for {struct-name}:{method-name/var-name}.
   4. Public field names should begin with letter / digit: =org-glance-headline:hash=.
   5. Private field names should begin with dash: =org-glance-headline:-hash=.
   6. Generic methods should end with an asterisk: =org-glance-headline-metadata:id*=.
   7. Lazy methods should be implemented in several steps:
      1. Define private attribute that will hold a value: =org-glance-headline:-hash=.
      2. Define private lazy method that delays computation: =org-glance-headline--hash=.
      3. Define public accessor method that enforces computation: =org-glance-headline:hash=.
4. When refactoring is in progress, preserve implemented functions and name new identifiers with version postfix: =org-glance-headline-v2=.
