# Iâ€™ve always thought they were lighthouses

* materialization
#+begin_src emacs-lisp
(progn
  (f-delete "/tmp/store" t)
  (-> (org-glance-store-from-scratch "/tmp/store"
        "* a"
        "* b"
        "* c")
      (org-glance-materialize "/tmp/store/first.org")
      (org-glance-store-remove-headline-by-hash "6d0af4c806aa2a7d2573bd7f10137a40")
      (org-glance-materialize "/tmp/store/second.org"))
  (append-to-file "* d" nil "/tmp/store/first.org"))
#+end_src

#+RESULTS:

* avl tree
#+begin_src emacs-lisp
(require 'avl-tree)

(setq test-tree (avl-tree-create #'string>))

(avl-tree-enter test-tree "a")
(avl-tree-enter test-tree "b")
(avl-tree-enter test-tree "c")
(avl-tree-enter test-tree "d")

(avl-tree-flatten test-tree)

(avl-tree-stack test-tree)

(avl-tree--cmpfun test-tree)

(avl-tree--node-data (avl-tree--node-branch (avl-tree--dummyroot test-tree) 0))
#+end_src

* laziness
#+begin_src emacs-lisp
;; -*- lexical-binding: t; -*-

(require 'thunk)

(defun lazy-test ()
  (interactive)
  (thunk-let ((a 1)
              (b (progn (message "side-effect!")
                        2)))
    (pp a)))

(lazy-test)
#+end_src
